{"version":3,"sources":["Components/Card/Card.js","Components/AppBar.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","props","Col","className","Card","style","width","Body","Title","day","Text","fontWeight","text","fontStyle","fontSize","Date","src","Symbol","Temperature","WeatherCondition","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","placeholder","writeInput","functionCall","AppBar","Toolbar","Typography","variant","noWrap","onChange","onRequestSearch","margin","maxWidth","Alert","elevation","Home","useState","place","setPlace","cards","setCards","message","setMessage","open","setOpen","messageState","setMessageState","handleClose","event","reason","searchValue","name","console","log","fetch","then","res","json","result","i","date","prevItems","Day","Intl","DateTimeFormat","weekday","format","month","getDate","toLocaleString","hour","hour12","Condition","catch","value","Snackbar","autoHideDuration","onClose","severity","Container","Row","xs","md","lg","map","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5de9193d.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Col} from 'react-bootstrap';\n\nexport default function WeatherCard(props) {\n\n    return (\n        <Col className=\"mb-4 d-flex align-items-center flex-column\">\n            <Card style={{ width: '10rem' }}>\n                <Card.Body>\n                    <Card.Title>\n                        {props.day}\n                    </Card.Title>\n                    <Card.Text className=\"d-flex align-items-center flex-column\">\n                        <div style={{fontWeight: 'bold'}}>{props.text}</div>\n                        <div style={{fontStyle: 'italic', fontSize: '0.9rem'}}>{props.Date}</div>\n                        <div> \n                            <img src={props.Symbol}/>\n                        </div>\n                        <div className=\"d-flex\" style={{fontSize: '2rem'}}>\n                            <div>{props.Temperature}</div>\n                            <div>ÂºF</div>\n                        </div>\n                        <div>{props.WeatherCondition}</div>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SearchBar from 'material-ui-search-bar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar(props) {\n  const classes = useStyles();\n  const { placeholder, writeInput, functionCall } = props\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Weather-Forecast\n          </Typography>\n          <SearchBar\n            onChange={writeInput}\n            onRequestSearch={functionCall}\n            style={{\n                margin: '0 auto',\n                maxWidth: 1000\n              }}\n            className=\"mb-3 mt-3\"\n            placeholder={placeholder}\n            />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport WeatherCard from '../Card/Card';\nimport {Container, Row} from 'react-bootstrap';\nimport SearchBar from 'material-ui-search-bar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SearchAppBar from '../AppBar'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Home() {\n\n  const [place, setPlace] = useState('')\n  const [cards, setCards] = useState([])\n  const [message, setMessage] = useState('')\n  const [open, setOpen] = useState(false);\n  const [messageState, setMessageState] = useState('')\n  const [input, setInput] = useState('')\n\n  function fetchApi(name){\n    console.log(\"Here\")\n    setCards([])\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?cnt=30&units=imperial&q=\" + name + \"&APPID=6c6633bc4f98cbc689f2808a390a9fe1\")\n    .then(res => res.json())\n    .then((result) => {\n        for(var i = 0; i < 30; i++){\n          var date = new Date(result['list'][i]['dt'] * 1000)\n          setCards(prevItems => [...prevItems, {\n            Day: new Intl.DateTimeFormat('en-US', { weekday: 'long'}).format(date),\n            Date: new Intl.DateTimeFormat('en-US', { month: 'long'}).format(date) + \" \" + date.getDate() + \", \" + date.toLocaleString('en-US', { hour: 'numeric', hour12: true }),\n            Symbol: \"http://openweathermap.org/img/wn/\" + result[\"list\"][i][\"weather\"][0][\"icon\"] + \"@2x.png\",\n            Temperature: result[\"list\"][i][\"main\"][\"temp\"],\n            Condition: result[\"list\"][i][\"weather\"][0][\"main\"]\n          }])\n        }\n        setMessageState('success')\n        setMessage('Loaded weather for ' + place)\n        setOpen(true);\n    })\n    .catch(() => {\n      setMessageState('error')\n      setMessage('Unable to load weather')\n      setOpen(true);\n    })\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <SearchAppBar placeholder=\"Enter a place...\" writeInput={(searchValue) => {\n        setPlace(searchValue)}} functionCall={() => fetchApi(place)} value={place}/>\n      <br/>\n      {/* <SearchBar\n      onChange={(searchValue) => setPlace(searchValue)}\n      onRequestSearch={() => fetchApi(place)}\n      style={{\n        margin: '0 auto',\n        maxWidth: 1000\n      }}\n      className=\"mb-3 mt-3\"\n      placeholder=\"Enter a place for its weather\"\n      /> */}\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={messageState}>\n          {message}\n        </Alert>\n      </Snackbar>\n      <Container>\n        <Row xs={2} md={4} lg={5}>\n          {\n            cards.map((card) => {\n              return <WeatherCard text={card.Day} Date={card.Date} WeatherCondition={card.Condition} Temperature={card.Temperature} Symbol={card.Symbol}/>\n            })\n          }\n        </Row>\n      </Container>\n    </div>\n  )\n}","import './App.css';\nimport Home from './Components/Home/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}