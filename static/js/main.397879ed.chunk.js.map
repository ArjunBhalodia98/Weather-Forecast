{"version":3,"sources":["Components/Card/Card.js","Components/AppBar.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","props","Col","className","Card","style","width","Body","Title","day","Text","fontWeight","text","fontStyle","fontSize","Date","src","Symbol","Temperature","WeatherCondition","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","SearchAppBar","classes","placeholder","writeInput","functionCall","AppBar","position","Toolbar","Container","Row","Typography","variant","onChange","onRequestSearch","margin","maxWidth","Alert","elevation","Home","useState","place","setPlace","cards","setCards","message","setMessage","open","setOpen","messageState","setMessageState","React","modalId","setModalId","handleModalClose","fetchApi","name","fetch","then","res","json","result","i","date","prevItems","id","Math","floor","random","Day","Intl","DateTimeFormat","weekday","format","month","getDate","toLocaleString","hour","hour12","Condition","FeelsLike","TempMin","TempMax","Humidity","WindSpeed","catch","handleClose","event","reason","searchValue","value","Snackbar","autoHideDuration","onClose","severity","Link","onClick","filteredCards","avgTemp","avgFeelsLike","avgTempMin","avgTempMax","avgHumidity","avgWindSpeed","currDay","counter","length","tempVar","toFixed","push","fiveDayWeather","xs","md","lg","map","card","Modal","show","onHide","centered","Header","closeButton","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.397879ed.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Col} from 'react-bootstrap';\n\nexport default function WeatherCard(props) {\n\n    return (\n        <Col className=\"mb-4 d-flex align-items-center flex-column\">\n            <Card style={{ width: '10rem' }}>\n                <Card.Body>\n                    <Card.Title>\n                        {props.day}\n                    </Card.Title>\n                    <Card.Text className=\"d-flex align-items-center flex-column\">\n                        <div style={{fontWeight: 'bold'}}>{props.text}</div>\n                        <div style={{fontStyle: 'italic', fontSize: '0.9rem'}}>{props.Date}</div>\n                        <div> \n                            <img src={props.Symbol}/>\n                        </div>\n                        <div className=\"d-flex\" style={{fontSize: '2rem'}}>\n                            <div>{props.Temperature}</div>\n                            <div>ÂºF</div>\n                        </div>\n                        <div>{props.WeatherCondition}</div>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBar from 'material-ui-search-bar';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('xs')]: {\n      display: 'block',\n    },\n  },\n}));\n\nexport default function SearchAppBar(props) {\n  const classes = useStyles();\n  const { placeholder, writeInput, functionCall } = props\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n            <Container>\n                <Row>\n                    <Col>\n                        <Typography className=\"mt-3\"  \n                        variant=\"h4\">\n                            Weather4U\n                        </Typography>\n                    </Col>\n                    <Col>\n                        <SearchBar\n                            onChange={writeInput}\n                            onRequestSearch={functionCall}\n                            style={{\n                                margin: '0 auto',\n                                maxWidth: 'auto'\n                            }}\n                            className=\"mb-3 mt-3\"\n                            placeholder={placeholder}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport WeatherCard from '../Card/Card';\nimport {Container, Row, Modal} from 'react-bootstrap';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SearchAppBar from '../AppBar'\nimport Link from '@material-ui/core/Link';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Home() {\n\n  const [place, setPlace] = useState('')\n  const [cards, setCards] = useState([])\n  const [message, setMessage] = useState('')\n  const [open, setOpen] = useState(false);\n  const [messageState, setMessageState] = useState('')\n  const [modalId, setModalId] = React.useState(\"\");\n\n  const handleModalClose = () => setModalId(\"\")\n\n  function fetchApi(name){\n    setCards([])\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?cnt=30&units=imperial&q=\" + name + \"&APPID=6c6633bc4f98cbc689f2808a390a9fe1\")\n    .then(res => res.json())\n    .then((result) => {\n        for(var i = 0; i < 30; i++){\n          var date = new Date(result['list'][i]['dt'] * 1000)\n          setCards(prevItems => [...prevItems, {\n            id: Math.floor((Math.random() * 100000) + 1),\n            Day: new Intl.DateTimeFormat('en-US', { weekday: 'long'}).format(date),\n            Date: new Intl.DateTimeFormat('en-US', { month: 'long'}).format(date) + \" \" + date.getDate() + \", \" + date.toLocaleString('en-US', { hour: 'numeric', hour12: true }),\n            Symbol: \"http://openweathermap.org/img/wn/\" + result[\"list\"][i][\"weather\"][0][\"icon\"] + \"@2x.png\",\n            Temperature: result[\"list\"][i][\"main\"][\"temp\"],\n            Condition: result[\"list\"][i][\"weather\"][0][\"main\"],\n            FeelsLike: result[\"list\"][i][\"main\"][\"feels_like\"],\n            TempMin: result[\"list\"][i][\"main\"][\"temp_min\"],\n            TempMax: result[\"list\"][i][\"main\"][\"temp_max\"],\n            Humidity: result[\"list\"][i][\"main\"][\"humidity\"],\n            WindSpeed: result[\"list\"][i][\"wind\"][\"speed\"]\n          }])\n        }\n        setMessageState('success')\n        setMessage('Loaded weather for ' + place)\n        setOpen(true);\n    })\n    .catch(() => {\n      setMessageState('error')\n      setMessage('Unable to load weather')\n      setOpen(true);\n    })\n  }\n\n  function fiveDayWeather(){\n    var filteredCards = []\n    var avgTemp = 0;\n    var avgFeelsLike = 0;\n    var avgTempMin = 0;\n    var avgTempMax = 0;\n    var avgHumidity = 0;\n    var avgWindSpeed = 0;\n    var currDay = cards[0].Day\n    var counter = 0;\n\n    for(var i = 0; i < cards.length; i++){\n      if(currDay !== cards[i].Day || i + 1 === cards.length){\n        avgTemp = avgTemp/counter;\n        avgFeelsLike = avgFeelsLike/counter;\n        avgTempMax = avgTempMax/counter;\n        avgTempMin = avgTempMin/counter;\n        avgHumidity = avgHumidity/counter;\n        avgWindSpeed = avgWindSpeed/counter;\n        var tempVar = {\n          id: Math.floor((Math.random() * 100000) + 1),\n          Day: currDay,\n          Symbol: cards[i - 1].Symbol,\n          Temperature: avgTemp.toFixed(2),\n          Condition: cards[i - 1].Condition,\n          FeelsLike: avgFeelsLike.toFixed(2),\n          TempMin: avgTempMin.toFixed(2),\n          TempMax: avgTempMax.toFixed(2),\n          Humidity: avgHumidity.toFixed(2),\n          WindSpeed: avgWindSpeed.toFixed(2)\n        }\n        filteredCards.push(tempVar)\n        avgTemp = 0;\n        avgFeelsLike = 0;\n        avgTempMax = 0;\n        avgTempMin = 0;\n        avgHumidity = 0;\n        avgWindSpeed = 0;\n        counter = 0;\n      }\n      avgTemp = avgTemp + cards[i].Temperature;\n      avgFeelsLike = avgFeelsLike + cards[i].FeelsLike;\n      avgTempMin = avgTempMin + cards[i].TempMin;\n      avgTempMax = avgTempMax + cards[i].TempMax;\n      avgHumidity = avgHumidity + cards[i].Humidity;\n      avgWindSpeed = avgWindSpeed + cards[i].WindSpeed;\n      currDay = cards[i].Day\n      counter += 1;\n    }\n    setCards(filteredCards)\n  }\n\n  function threeHourWeather() {\n    fetchApi(place)\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <SearchAppBar placeholder=\"Enter a place...\" writeInput={(searchValue) => {\n        setPlace(searchValue)}} functionCall={() => fetchApi(place)} value={place}/>\n      <br/>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={messageState}>\n          {message}\n        </Alert>\n      </Snackbar>\n      <div className=\"d-flex justify-content-around\">\n        <div>\n          <Link onClick={() => fiveDayWeather()}>5-Day Weather</Link>\n        </div>\n        <div>\n          <Link onClick={() => threeHourWeather()}>3hr Weather</Link>\n        </div>\n      </div>\n      <Container>\n        <Row xs={2} md={4} lg={5}>\n          {\n            cards.map((card, i) => {\n              return(\n                <div>\n                  <div className='box' onClick={() => setModalId(`modal${i}`)}>\n                    <WeatherCard text={card.Day} Date={card.Date} WeatherCondition={card.Condition} Temperature={card.Temperature} Symbol={card.Symbol}/>\n                  </div>\n                  <Modal\n                    show={modalId === `modal${i}`}\n                    onHide={handleModalClose}\n                    aria-labelledby={`${card.id}ModalLabel`}\n                    centered\n                  >\n                    <Modal.Header id={`${card.id}ModalLabel`} closeButton>\n                      <div class=\"d-flex flex-column\">\n                        <div>\n                          <h3>{card.Day}</h3>\n                        </div>\n                        <div>\n                          <div style={{fontStyle: 'italic', fontSize: '0.9rem'}}>{card.Date}</div>\n                        </div>\n                      </div>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <div>\n                        Feels Like: {card.FeelsLike} ÂºF\n                      </div>\n                      <div>\n                        Minimum Temperature: {card.TempMin} ÂºF\n                      </div>\n                      <div>\n                        Maximum Temperature: {card.TempMax} ÂºF\n                      </div>\n                      <div>\n                        Humidity: {card.Humidity}\n                      </div>\n                      <div>\n                        Wind Speed: {card.WindSpeed}\n                      </div>\n                    </Modal.Body>\n                  </Modal>\n                </div>\n              )})\n          }\n        </Row>\n      </Container>\n    </div>\n  )\n}","import './App.css';\nimport Home from './Components/Home/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}