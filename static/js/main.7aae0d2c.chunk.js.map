{"version":3,"sources":["Components/Card/Card.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","props","Col","className","Card","style","width","Body","Title","day","Text","fontWeight","text","fontStyle","fontSize","Date","Temperature","WeatherCondition","Home","useState","place","setPlace","cards","setCards","onChange","searchValue","onRequestSearch","name","fetch","then","res","json","result","i","date","prevItems","Day","Intl","DateTimeFormat","weekday","format","month","getDate","toLocaleString","hour","hour12","Symbol","Condition","margin","maxWidth","Container","Row","xs","md","lg","map","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAIe,SAASA,EAAYC,GAEhC,OACI,cAACC,EAAA,EAAD,CAAKC,UAAU,6CAAf,SACI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACI,eAACF,EAAA,EAAKG,KAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UACKP,EAAMQ,MAEX,eAACL,EAAA,EAAKM,KAAN,CAAWP,UAAU,wCAArB,UACI,qBAAKE,MAAO,CAACM,WAAY,QAAzB,SAAmCV,EAAMW,OACzC,qBAAKP,MAAO,CAACQ,UAAW,SAAUC,SAAU,UAA5C,SAAwDb,EAAMc,OAC9D,oCAAM,cAAC,IAAD,CAAWV,MAAO,CAACS,SAAU,aACnC,sBAAKX,UAAU,SAASE,MAAO,CAACS,SAAU,QAA1C,UACI,8BAAMb,EAAMe,cACZ,2CAEJ,8BAAMf,EAAMgB,6B,uCChBrB,SAASC,IAEtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAqBA,OACE,gCACE,cAAC,IAAD,CACAC,SAAU,SAACC,GAAD,OAAiBJ,EAASI,IACpCC,gBAAiB,kBAtBHC,EAsBkBP,EArBlCG,EAAS,SACTK,MAAM,4EAA8ED,EAAO,2CAC1FE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACzB,IAAIC,EAAO,IAAInB,KAA+B,IAA1BiB,EAAM,KAASC,GAAf,IACpBV,GAAS,SAAAY,GAAS,4BAAQA,GAAR,CAAmB,CACnCC,IAAK,IAAIC,KAAKC,eAAe,QAAS,CAAEC,QAAS,SAASC,OAAON,GACjEnB,KAAM,IAAIsB,KAAKC,eAAe,QAAS,CAAEG,MAAO,SAASD,OAAON,GAAQ,IAAMA,EAAKQ,UAAY,KAAOR,EAAKS,eAAe,QAAS,CAAEC,KAAM,UAAWC,QAAQ,IAC9JC,cACA9B,YAAagB,EAAM,KAASC,GAAf,UACbc,UAAWf,EAAM,KAASC,GAAf,QAA6B,GAA7B,eAZrB,IAAkBN,GAuBdtB,MAAO,CACL2C,OAAQ,SACRC,SAAU,KAEZ9C,UAAU,cAEV,cAAC+C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SAEIhC,EAAMiC,KAAI,SAACC,GACT,OAAO,cAACxD,EAAD,CAAaY,KAAM4C,EAAKpB,IAAKrB,KAAMyC,EAAKzC,KAAME,iBAAkBuC,EAAKT,UAAW/B,YAAawC,EAAKxC,wBCnCxGyC,MANf,WACE,OACE,cAACvC,EAAD,KCOWwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7aae0d2c.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Col} from 'react-bootstrap';\nimport CloudIcon from '@material-ui/icons/Cloud';\n\nexport default function WeatherCard(props) {\n\n    return (\n        <Col className=\"mb-4 d-flex align-items-center flex-column\">\n            <Card style={{ width: '10rem' }}>\n                <Card.Body>\n                    <Card.Title>\n                        {props.day}\n                    </Card.Title>\n                    <Card.Text className=\"d-flex align-items-center flex-column\">\n                        <div style={{fontWeight: 'bold'}}>{props.text}</div>\n                        <div style={{fontStyle: 'italic', fontSize: '0.9rem'}}>{props.Date}</div>\n                        <div> <CloudIcon style={{fontSize: '4rem'}}/></div>\n                        <div className=\"d-flex\" style={{fontSize: '2rem'}}>\n                            <div>{props.Temperature}</div>\n                            <div>ÂºF</div>\n                        </div>\n                        <div>{props.WeatherCondition}</div>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n\n}\n","import React, {useState} from 'react';\nimport WeatherCard from '../Card/Card';\nimport {Container, Row} from 'react-bootstrap';\nimport SearchBar from 'material-ui-search-bar';\n\nexport default function Home() {\n\n  const [place, setPlace] = useState('')\n  const [cards, setCards] = useState([])\n\n\n  function fetchApi(name){\n    setCards([])\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?cnt=30&units=imperial&q=\" + name + \"&APPID=6c6633bc4f98cbc689f2808a390a9fe1\")\n    .then(res => res.json())\n    .then((result) => {\n        for(var i = 0; i < 30; i++){\n          var date = new Date(result['list'][i]['dt'] * 1000)\n          setCards(prevItems => [...prevItems, {\n            Day: new Intl.DateTimeFormat('en-US', { weekday: 'long'}).format(date),\n            Date: new Intl.DateTimeFormat('en-US', { month: 'long'}).format(date) + \" \" + date.getDate() + \", \" + date.toLocaleString('en-US', { hour: 'numeric', hour12: true }),\n            Symbol,\n            Temperature: result[\"list\"][i][\"main\"][\"temp\"],\n            Condition: result[\"list\"][i][\"weather\"][0][\"main\"]\n          }])\n        }\n    })\n  }\n\n  return (\n    <div>\n      <SearchBar\n      onChange={(searchValue) => setPlace(searchValue)}\n      onRequestSearch={() => fetchApi(place)}\n      style={{\n        margin: '0 auto',\n        maxWidth: 800\n      }}\n      className=\"mb-3 mt-3\"\n      />\n      <Container>\n        <Row xs={2} md={4} lg={5}>\n          {\n            cards.map((card) => {\n              return <WeatherCard text={card.Day} Date={card.Date} WeatherCondition={card.Condition} Temperature={card.Temperature}/>\n            })\n          }\n        </Row>\n      </Container>\n    </div>\n  )\n}","import './App.css';\nimport Home from './Components/Home/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}